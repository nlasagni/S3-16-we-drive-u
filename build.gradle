group = projectGroup
version = projectVersion
description = projectDescription


buildscript {

    ext.android = "com.android.tools.build:gradle:${androidGradleVersion}"

    repositories {
        jcenter()
    }
    dependencies {
        classpath android
    }
}

allprojects {
    apply plugin: 'idea'
    repositories {
        jcenter()
        mavenCentral()
    }
}

configure(subprojects.findAll()) {
    if (it.name != "mobile") {
        apply plugin: 'java'
        sourceCompatibility = "$jdkVersion"
        dependencies {
            compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
            testCompile "junit:junit:$junitVersion"
        }
    }
}

project(":backoffice") {
    apply plugin: 'scala'
    scaladoc.destinationDir = new File("docs/scala")
    dependencies {
        compile "org.scala-lang:scala-library:$scalaVersion"
    }
}

project(":mobile") {
    apply plugin: 'com.android.application'
    dependencies {
        compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        testCompile "junit:junit:$junitVersion"
    }
}

static def javaDocProjects(subProjects) {
    return subProjects.grep {it.name != "mobile"}
}

task javadoc(overwrite: true, type: Javadoc) {
    source javaDocProjects(subprojects).collect { project -> project.sourceSets.main.allJava }
    dependsOn javaDocProjects(subprojects).collect() { project -> project.javadoc.source }
    destinationDir = new File("docs/java")
    classpath = files(javaDocProjects(subprojects).collect {project -> project.sourceSets.main.allJava})
}
